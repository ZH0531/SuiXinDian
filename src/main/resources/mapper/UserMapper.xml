<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zh8888.dao.UserDao">
    <!-- 结果映射 -->
    <resultMap id="BaseResultMap" type="com.zh8888.model.User">
        <id column="id" property="id" />
        <result column="user_id" property="userId" />
        <result column="password" property="password" />
        <result column="username" property="username" />
        <result column="phone" property="phone" />
        <result column="email" property="email" />
        <result column="address" property="address" />
        <result column="gender" property="gender" />
        <result column="role" property="role" />
        <result column="create_time" property="createTime" />
        <result column="update_time" property="updateTime" />
    </resultMap>
    
    <!-- 通用列 -->
    <sql id="Base_Column_List">
        id, user_id, password, username, phone, email, address, gender, role, create_time, update_time
    </sql>
    
    <!-- 插入用户 -->
    <insert id="insertUser" parameterType="com.zh8888.model.User" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO user (
            user_id, password, username, phone, email, address, gender, role, create_time, update_time
        ) VALUES (
            #{userId}, #{password}, #{username}, #{phone}, #{email}, #{address}, #{gender}, #{role}, NOW(), NOW()
        )
    </insert>
    
    <!-- 删除用户 -->
    <delete id="deleteUser" parameterType="java.lang.Integer">
        DELETE FROM user WHERE id = #{id}
    </delete>
    
    <!-- 更新用户 -->
    <update id="updateUser" parameterType="com.zh8888.model.User">
        UPDATE user
        <set>
            <if test="userId != null">user_id = #{userId},</if>
            <if test="password != null">password = #{password},</if>
            <if test="username != null">username = #{username},</if>
            <if test="phone != null">phone = #{phone},</if>
            <if test="email != null">email = #{email},</if>
            <if test="address != null">address = #{address},</if>
            <if test="gender != null">gender = #{gender},</if>
            <if test="role != null">role = #{role},</if>
            update_time = NOW()
        </set>
        WHERE id = #{id}
    </update>
    
    <!-- 根据ID查询用户 -->
    <select id="getUserById" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        SELECT <include refid="Base_Column_List" />
        FROM user
        WHERE id = #{id}
    </select>
    
    <!-- 根据用户ID查询用户 -->
    <select id="getUserByUserId" resultMap="BaseResultMap" parameterType="java.lang.String">
        SELECT <include refid="Base_Column_List" />
        FROM user
        WHERE user_id = #{userId}
    </select>
    
    <!-- 获取所有用户 -->
    <select id="getAllUsers" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List" />
        FROM user
        ORDER BY id
    </select>
    
    <!-- 用户登录（使用用户ID） -->
    <select id="login" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List" />
        FROM user
        WHERE user_id = #{userId} AND password = #{password}
    </select>
    
    <!-- 手机号登录 -->
    <select id="loginByPhone" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List" />
        FROM user
        WHERE phone = #{phone} AND password = #{password}
    </select>
    
    <!-- 邮箱登录 -->
    <select id="loginByEmail" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List" />
        FROM user
        WHERE email = #{email} AND password = #{password}
    </select>
    
    <!-- 根据手机号查询用户 -->
    <select id="getUserByPhone" resultMap="BaseResultMap" parameterType="java.lang.String">
        SELECT <include refid="Base_Column_List" />
        FROM user
        WHERE phone = #{phone}
    </select>
    
    <!-- 根据邮箱查询用户 -->
    <select id="getUserByEmail" resultMap="BaseResultMap" parameterType="java.lang.String">
        SELECT <include refid="Base_Column_List" />
        FROM user
        WHERE email = #{email}
    </select>
    
    <!-- 获取最后一个用户ID -->
    <select id="getLastUserId" resultType="java.lang.String">
        SELECT user_id
        FROM user
        WHERE user_id LIKE 'sxd%'
        ORDER BY id DESC
        LIMIT 1
    </select>
    
    <!-- 获取用户总数 -->
    <select id="getUserCount" resultType="int">
        SELECT COUNT(*) FROM user
    </select>
</mapper> 